{"version":3,"file":"index-598f0916.js","sources":["../../src/shared/ui/form/text-input/action.tsx","../../src/shared/ui/form/text-input/text-input.tsx","../../src/shared/ui/form/text-input/index.ts"],"sourcesContent":["import clsx from \"clsx\";\nimport { type ButtonHTMLAttributes, forwardRef, type FunctionComponent } from \"react\";\nimport { tw } from \"typewind\";\n\nimport { Icon, type SpriteKey } from \"../../icon\";\nimport { type SxProp } from \"../../types\";\n\ntype ActionProps = {\n  icon: SpriteKey;\n} & SxProp &\n  ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const Action = forwardRef<HTMLButtonElement, ActionProps>(({ icon, sx, ...props }, ref) => {\n  return (\n    <button\n      ref={ref}\n      {...props}\n      className={clsx(\n        tw.rounded_sm.h_5.w_6.flex.items_center.justify_center.hover(tw.bg_canvasSubtle),\n        sx,\n      )}\n    >\n      <Icon name={icon} width=\"16px\" height=\"16px\"></Icon>\n    </button>\n  );\n});\n","import clsx from \"clsx\";\nimport { cva, type VariantProps } from \"cva\";\nimport {\n  type ComponentType,\n  forwardRef,\n  type HTMLProps,\n  type InputHTMLAttributes,\n  type ReactElement,\n  ReactNode,\n} from \"react\";\nimport { tw } from \"typewind\";\n\nimport { Icon } from \"../../icon\";\nimport { type SxProp } from \"../../types\";\n\nconst textVariants = cva(\n  [\n    tw.text_md.shadow_sm.inline_flex.bg_canvasInset.border_borderDefault.border.rounded_md\n      .text_fgDefault.px_3.py_1.block.items_center.px_2.w_[\"440px\"],\n    tw.focus_within(tw.outline_none.border.border_accentFg.shadow_sm),\n  ],\n  {\n    variants: {\n      validationStatus: {\n        success: [tw.border_successEmphasis],\n        error: [tw.border_dangerEmphasis],\n        warning: [tw.border_attentionEmphasis],\n      },\n      size: {\n        sm: [tw.min_h_[\"28px\"]],\n        md: [tw.min_h_[\"32px\"]],\n        lg: [tw.min_h_[\"32px\"].h_10],\n      },\n      block: {\n        true: [tw.w_full],\n      },\n      disabled: {\n        true: [tw.bg_inputDisabledBg],\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n      block: false,\n    },\n  },\n);\n\ntype TextInputProps = {\n  block?: boolean;\n  loading?: boolean;\n  leadingVisual?: ReactNode;\n  trailingVisual?: ReactNode;\n  trailingAction?: ReactElement<HTMLProps<HTMLButtonElement>>;\n} & Omit<InputHTMLAttributes<HTMLInputElement>, \"size\"> &\n  SxProp &\n  VariantProps<typeof textVariants>;\n\nconst icon = tw.self_center.shrink_0.flex.items_center;\n\nexport const InternalTextInput = forwardRef<HTMLInputElement, TextInputProps>(\n  (\n    {\n      size,\n      validationStatus,\n      loading,\n      block,\n      leadingVisual,\n      trailingAction,\n      trailingVisual,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <span className={clsx(textVariants({ size, validationStatus, block }))}>\n        {leadingVisual && <span className={icon}>{leadingVisual}</span>}\n        <input\n          className={tw.bg_transparent.border_0.text_inherit.w_full.px_1\n            .focus(tw.outline_0)\n            .focus_visible(tw.outline_0)}\n          {...props}\n          ref={ref}\n        />\n        {trailingVisual && <span className={icon}>{trailingVisual}</span>}\n        {trailingAction && loading && <Icon sx={tw.animate_spin} name=\"common/loader\" />}\n        {trailingAction && !loading && <span className={icon}>{trailingAction}</span>}\n      </span>\n    );\n  },\n);\n","import { Action } from \"./action\";\nimport { InternalTextInput } from \"./text-input\";\n\nexport const TextInput = Object.assign(InternalTextInput, {\n  Action,\n});\n"],"names":["Action","forwardRef","icon","sx","ref","jsx","props","clsx","Icon","textVariants","cva","InternalTextInput","size","validationStatus","loading","block","leadingVisual","trailingAction","trailingVisual","jsxs","TextInput","Object","assign"],"mappings":"4KAYO,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAA2D,KAAAC,EAAEA,GAAAA,EAAMC,GAAAA,CAAa,EAAAC,IACrFC,EAAA,IAAA,SAAA,CAAA,IAAAD,EAAA,GAAAE,EAAA,UAAAC,EAAA,4EAAAJ,CAAA,EAAA,SAAAE,EAAAA,IAAAG,EAAA,CAAA,KAAAN,EAAA,MAAA,OAAA,OAAA,OAAA,CAAA,CAAA,CAYF,qwBCVA,MAAAO,EAAAC,EAAA,CAAA,iJAAA,mGAAA,EAAA,CAME,SAAA,CACY,iBAAA,CACU,QAAA,CAAA,wBAAA,EACoB,MAAA,CAAA,uBAAA,EACH,QAAA,CAAA,0BAAA,CACxB,EACX,KAAA,CACM,GAAA,CAAA,cAAA,EACmB,GAAA,CAAA,cAAA,EACA,GAAA,CAAA,mBAAA,CACnB,EACN,MAAA,CACO,KAAA,CAAA,QAAA,CACC,EACR,SAAA,CACU,KAAA,CAAA,oBAAA,CACF,CACR,EACF,gBAAA,CACiB,KAAA,KACT,MAAA,EACC,CAEX,CAAA,EAaFR,EAAA,yCAEOS,EAAAV,EAAA,WAAA,CAAA,CAEH,KAAAW,EACEA,iBAAAA,EACAC,QAAAA,EACAC,MAAAA,EACAC,cAAAA,EACAC,eAAAA,EACAC,eAAAA,EACAC,GAAAA,CAEF,EAAAd,IAGAe,EAAA,KAAA,OAAA,CAAA,UAAAZ,EAAAE,EAAA,CACqC,KAAAG,EAAEA,iBAAAA,EAAMC,MAAAA,CAAkBE,CAAAA,CAAAA,EAAAA,SAAAA,CAC1DC,GAAAA,EAAAA,IAAAA,OAAAA,CAAAA,UAAAA,EAAAA,SAAAA,EAAAA,EAAuDX,EAAA,IAAA,QAAA,CAAA,UAAA,2FAAA,GAAAC,EAAA,IAAAF,EAAA,EAM7Cc,GAAAb,EAAA,IAAA,OAAA,CAAA,UAAAH,EAAA,SAAAgB,EAAA,EAE+CD,GAAAH,GAAAT,EAAAA,IAAAG,EAAA,CAAA,GAAA,eAAA,KAAA,gBAAA,EACsBS,GAAA,CAAAH,GAAAT,EAAAA,IAAA,OAAA,CAAA,UAAAH,EAAA,SAAAe,EAAA,CACV,CAAA,CAAA,CAG5E,y/BCrFWG,MAAAA,EAAYC,OAAOC,OAAOX,EAAmB,CACxDX,OAAAA,CACF,CAAC"}