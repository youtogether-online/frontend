{"version":3,"file":"link.features.stories-6d63ff99.js","sources":["../../src/shared/ui/link/link.tsx"],"sourcesContent":["import { Slot } from \"@radix-ui/react-slot\";\nimport clsx from \"clsx\";\nimport { cva, type VariantProps } from \"cva\";\nimport { type AnchorHTMLAttributes, forwardRef, type ReactNode } from \"react\";\nimport { tw } from \"typewind\";\n\nimport { type SxProp } from \"../types\";\n\nconst link = cva([tw.text_accentFg, tw.hover(tw.underline)], {\n  variants: {\n    muted: {\n      true: [tw.text_fgMuted, tw.hover(tw.no_underline.text_accentFg)],\n    },\n    underline: {\n      true: [tw.underline],\n    },\n  },\n});\n\ntype LinkProps = AnchorHTMLAttributes<HTMLAnchorElement> &\n  VariantProps<typeof link> & {\n    children: ReactNode;\n    asChild?: boolean;\n  } & SxProp;\n\nexport const Link = forwardRef<HTMLAnchorElement, LinkProps>(\n  ({ children, asChild, underline, muted, sx, ...props }, ref) => {\n    const Component = asChild ? Slot : \"a\";\n\n    return (\n      <Component ref={ref} className={clsx(link({ muted, underline }), sx)} {...props}>\n        {children}\n      </Component>\n    );\n  },\n);\n"],"names":["link","cva","Link","forwardRef","children","asChild","underline","muted","sx","ref","Component","Slot","jsx","clsx"],"mappings":"yPAQA,MAAAA,EAAAC,EAAA,CAAA,gBAAA,iBAAA,EAAA,CAA6D,SAAA,CACjD,MAAA,CACD,KAAA,CAAA,eAAA,wCAAA,CACC,EACR,UAAA,CACW,KAAA,CAAA,WAAA,CACH,CACR,CAEJ,CAAA,EAQOC,EAAAC,EAAA,WAAA,CAAA,CACJ,SAAAC,EAAEA,QAAAA,EAAUC,UAAAA,EAASC,MAAAA,EAAWC,GAAAA,EAAOC,GAAAA,CAAa,EAAAC,IAAA,CACnD,MAAAC,EAAAL,EAAAM,EAAA,IAEA,OAAAC,EAAAA,IAAAF,EAAA,CAAA,IAAAD,EAAA,UAAAI,EAAAb,EAAA,CAC4C,MAAAO,EAAEA,UAAAA,CAAOD,CAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,SAAAA,CAAAA,CAAAA,CAIvD,CAAA;;;;;;;;;;;;;;;;;"}